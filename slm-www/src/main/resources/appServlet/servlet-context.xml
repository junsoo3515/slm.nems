<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:util="http://www.springframework.org/schema/util"
			 xmlns:jee="http://www.springframework.org/schema/jee"
			 xmlns:mvc="http://www.springframework.org/schema/mvc"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
             http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
             http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
             http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
			 http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd">

	<!-- Spring MVC @Controller로 경로를 설정 -->
	<annotation-driven />
	<context:component-scan base-package="slm.www" />

    <util:properties id="cfg" location="classpath:config.properties"/>

	<!-- 리소스 (Static 파일들)의 경로를 매핑 -->
	<resources mapping="/res/**" location="/resources/" />

    <!-- 인터셉터 설정 -->
    <interceptors>
        <interceptor>
            <mapping path="/login/**"/>
            <beans:bean class="slm.www.interceptors.LoginInterceptor"></beans:bean>
        </interceptor>
        <interceptor>
            <mapping path="/**"/>
            <exclude-mapping path="/res/**"/>
            <exclude-mapping path="/login/**"/>
            <beans:bean class="slm.www.interceptors.DefaultInterceptor"></beans:bean>
        </interceptor>
    </interceptors>
		
	<!-- Apache Tiles 3 설정 -->
	<!-- Tiles Resolver (ORDER=1, 기본) -->
 	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>
	<!-- Tiles Definitions -->
 	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>classpath:/appServlet/tiles-context.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	<!-- JSTL View Resolver (ORDER=2) -->
	<!-- Apache Tiles 3에서 찾지 못하는 경우 JSP View Resolver에서 찾도록 설정 -->
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>
	
	<!-- Multipart Resolver (파일업로드) 설정-->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <beans:property name="maxUploadSize" value="5000000" />
    </beans:bean>

	<!-- Database 설정 -->

	<!-- Oracle Database 설정(JNDI 사용 시) -->
	<jee:jndi-lookup id="dataSource" jndi-name="jdbc/ora" expected-type="javax.sql.DataSource" resource-ref="true"/>

	<!-- MyBatis 설정 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="mapperLocations" value="classpath:sql/oracle/**/*.xml" />
	</beans:bean>
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory" />
	</beans:bean>
	<beans:bean id="sqlBatchSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory" />
		<beans:constructor-arg index="1" value="BATCH" />
	</beans:bean>

	<!-- Spring Transaction Manager -->
	<beans:bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

</beans:beans>
